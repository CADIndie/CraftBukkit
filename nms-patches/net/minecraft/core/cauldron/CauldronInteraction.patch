--- a/net/minecraft/core/cauldron/CauldronInteraction.java
+++ b/net/minecraft/core/cauldron/CauldronInteraction.java
@@ -29,6 +29,10 @@
 import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.gameevent.GameEvent;
 
+// CraftBukkit start
+import org.bukkit.event.block.CauldronLevelChangeEvent;
+// CraftBukkit end
+
 public interface CauldronInteraction {
 
     Map<Item, CauldronInteraction> EMPTY = newInteractionMap();
@@ -51,6 +55,11 @@
             return EnumInteractionResult.PASS;
         } else {
             if (!world.isClientSide) {
+                // CraftBukkit start
+                if (!LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition, entityhuman, CauldronLevelChangeEvent.ChangeReason.SHULKER_WASH)) {
+                    return EnumInteractionResult.SUCCESS;
+                }
+                // CraftBukkit end
                 ItemStack itemstack1 = new ItemStack(Blocks.SHULKER_BOX);
 
                 if (itemstack.hasTag()) {
@@ -59,7 +68,7 @@
 
                 entityhuman.setItemInHand(enumhand, itemstack1);
                 entityhuman.awardStat(StatisticList.CLEAN_SHULKER_BOX);
-                LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition);
+                // LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition); // CraftBukkit
             }
 
             return EnumInteractionResult.sidedSuccess(world.isClientSide);
@@ -70,6 +79,11 @@
             return EnumInteractionResult.PASS;
         } else {
             if (!world.isClientSide) {
+                // CraftBukkit start
+                if (!LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition, entityhuman, CauldronLevelChangeEvent.ChangeReason.BANNER_WASH)) {
+                    return EnumInteractionResult.SUCCESS;
+                }
+                // CraftBukkit end
                 ItemStack itemstack1 = itemstack.copyWithCount(1);
 
                 TileEntityBanner.removeLastPattern(itemstack1);
@@ -86,7 +100,7 @@
                 }
 
                 entityhuman.awardStat(StatisticList.CLEAN_BANNER);
-                LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition);
+                // LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition); // CraftBukkit
             }
 
             return EnumInteractionResult.sidedSuccess(world.isClientSide);
@@ -104,9 +118,14 @@
                 return EnumInteractionResult.PASS;
             } else {
                 if (!world.isClientSide) {
+                    // CraftBukkit start
+                    if (!LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition, entityhuman, CauldronLevelChangeEvent.ChangeReason.ARMOR_WASH)) {
+                        return EnumInteractionResult.SUCCESS;
+                    }
+                    // CraftBukkit end
                     idyeable.clearColor(itemstack);
                     entityhuman.awardStat(StatisticList.CLEAN_ARMOR);
-                    LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition);
+                    // LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition); // CraftBukkit
                 }
 
                 return EnumInteractionResult.sidedSuccess(world.isClientSide);
@@ -115,7 +134,7 @@
     };
 
     static Object2ObjectOpenHashMap<Item, CauldronInteraction> newInteractionMap() {
-        return (Object2ObjectOpenHashMap) SystemUtils.make(new Object2ObjectOpenHashMap(), (object2objectopenhashmap) -> {
+        return SystemUtils.make(new Object2ObjectOpenHashMap<>(), (object2objectopenhashmap) -> { // CraftBukkit - decompile error
             object2objectopenhashmap.defaultReturnValue((iblockdata, world, blockposition, entityhuman, enumhand, itemstack) -> {
                 return EnumInteractionResult.PASS;
             });
@@ -131,12 +150,17 @@
                 return EnumInteractionResult.PASS;
             } else {
                 if (!world.isClientSide) {
+                    // CraftBukkit start
+                    if (!LayeredCauldronBlock.changeLevel(iblockdata, world, blockposition, Blocks.WATER_CAULDRON.defaultBlockState(), entityhuman, CauldronLevelChangeEvent.ChangeReason.BOTTLE_EMPTY)) {
+                        return EnumInteractionResult.SUCCESS;
+                    }
+                    // CraftBukkit end
                     Item item = itemstack.getItem();
 
                     entityhuman.setItemInHand(enumhand, ItemLiquidUtil.createFilledResult(itemstack, entityhuman, new ItemStack(Items.GLASS_BOTTLE)));
                     entityhuman.awardStat(StatisticList.USE_CAULDRON);
                     entityhuman.awardStat(StatisticList.ITEM_USED.get(item));
-                    world.setBlockAndUpdate(blockposition, Blocks.WATER_CAULDRON.defaultBlockState());
+                    // world.setBlockAndUpdate(blockposition, Blocks.WATER_CAULDRON.defaultBlockState()); // CraftBukkit
                     world.playSound((EntityHuman) null, blockposition, SoundEffects.BOTTLE_EMPTY, SoundCategory.BLOCKS, 1.0F, 1.0F);
                     world.gameEvent((Entity) null, GameEvent.FLUID_PLACE, blockposition);
                 }
@@ -152,12 +176,17 @@
         });
         CauldronInteraction.WATER.put(Items.GLASS_BOTTLE, (iblockdata, world, blockposition, entityhuman, enumhand, itemstack) -> {
             if (!world.isClientSide) {
+                // CraftBukkit start
+                if (!LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition, entityhuman, CauldronLevelChangeEvent.ChangeReason.BOTTLE_FILL)) {
+                    return EnumInteractionResult.SUCCESS;
+                }
+                // CraftBukkit end
                 Item item = itemstack.getItem();
 
                 entityhuman.setItemInHand(enumhand, ItemLiquidUtil.createFilledResult(itemstack, entityhuman, PotionUtil.setPotion(new ItemStack(Items.POTION), Potions.WATER)));
                 entityhuman.awardStat(StatisticList.USE_CAULDRON);
                 entityhuman.awardStat(StatisticList.ITEM_USED.get(item));
-                LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition);
+                // LayeredCauldronBlock.lowerFillLevel(iblockdata, world, blockposition); // CraftBukkit
                 world.playSound((EntityHuman) null, blockposition, SoundEffects.BOTTLE_FILL, SoundCategory.BLOCKS, 1.0F, 1.0F);
                 world.gameEvent((Entity) null, GameEvent.FLUID_PICKUP, blockposition);
             }
@@ -167,10 +196,15 @@
         CauldronInteraction.WATER.put(Items.POTION, (iblockdata, world, blockposition, entityhuman, enumhand, itemstack) -> {
             if ((Integer) iblockdata.getValue(LayeredCauldronBlock.LEVEL) != 3 && PotionUtil.getPotion(itemstack) == Potions.WATER) {
                 if (!world.isClientSide) {
+                    // CraftBukkit start
+                    if (!LayeredCauldronBlock.changeLevel(iblockdata, world, blockposition, iblockdata.cycle(LayeredCauldronBlock.LEVEL), entityhuman, CauldronLevelChangeEvent.ChangeReason.BOTTLE_EMPTY)) {
+                        return EnumInteractionResult.SUCCESS;
+                    }
+                    // CraftBukkit end
                     entityhuman.setItemInHand(enumhand, ItemLiquidUtil.createFilledResult(itemstack, entityhuman, new ItemStack(Items.GLASS_BOTTLE)));
                     entityhuman.awardStat(StatisticList.USE_CAULDRON);
                     entityhuman.awardStat(StatisticList.ITEM_USED.get(itemstack.getItem()));
-                    world.setBlockAndUpdate(blockposition, (IBlockData) iblockdata.cycle(LayeredCauldronBlock.LEVEL));
+                    // world.setBlockAndUpdate(blockposition, (IBlockData) iblockdata.cycle(LayeredCauldronBlock.LEVEL)); // CraftBukkit
                     world.playSound((EntityHuman) null, blockposition, SoundEffects.BOTTLE_EMPTY, SoundCategory.BLOCKS, 1.0F, 1.0F);
                     world.gameEvent((Entity) null, GameEvent.FLUID_PLACE, blockposition);
                 }
@@ -242,12 +276,17 @@
             return EnumInteractionResult.PASS;
         } else {
             if (!world.isClientSide) {
+                // CraftBukkit start
+                if (!LayeredCauldronBlock.changeLevel(iblockdata, world, blockposition, Blocks.CAULDRON.defaultBlockState(), entityhuman, CauldronLevelChangeEvent.ChangeReason.BUCKET_FILL)) {
+                    return EnumInteractionResult.SUCCESS;
+                }
+                // CraftBukkit end
                 Item item = itemstack.getItem();
 
                 entityhuman.setItemInHand(enumhand, ItemLiquidUtil.createFilledResult(itemstack, entityhuman, itemstack1));
                 entityhuman.awardStat(StatisticList.USE_CAULDRON);
                 entityhuman.awardStat(StatisticList.ITEM_USED.get(item));
-                world.setBlockAndUpdate(blockposition, Blocks.CAULDRON.defaultBlockState());
+                // world.setBlockAndUpdate(blockposition, Blocks.CAULDRON.defaultBlockState()); // CraftBukkit
                 world.playSound((EntityHuman) null, blockposition, soundeffect, SoundCategory.BLOCKS, 1.0F, 1.0F);
                 world.gameEvent((Entity) null, GameEvent.FLUID_PICKUP, blockposition);
             }
@@ -258,12 +297,17 @@
 
     static EnumInteractionResult emptyBucket(World world, BlockPosition blockposition, EntityHuman entityhuman, EnumHand enumhand, ItemStack itemstack, IBlockData iblockdata, SoundEffect soundeffect) {
         if (!world.isClientSide) {
+            // CraftBukkit start
+            if (!LayeredCauldronBlock.changeLevel(iblockdata, world, blockposition, iblockdata, entityhuman, CauldronLevelChangeEvent.ChangeReason.BUCKET_EMPTY)) {
+                return EnumInteractionResult.SUCCESS;
+            }
+            // CraftBukkit end
             Item item = itemstack.getItem();
 
             entityhuman.setItemInHand(enumhand, ItemLiquidUtil.createFilledResult(itemstack, entityhuman, new ItemStack(Items.BUCKET)));
             entityhuman.awardStat(StatisticList.FILL_CAULDRON);
             entityhuman.awardStat(StatisticList.ITEM_USED.get(item));
-            world.setBlockAndUpdate(blockposition, iblockdata);
+            // world.setBlockAndUpdate(blockposition, iblockdata); // CraftBukkit
             world.playSound((EntityHuman) null, blockposition, soundeffect, SoundCategory.BLOCKS, 1.0F, 1.0F);
             world.gameEvent((Entity) null, GameEvent.FLUID_PLACE, blockposition);
         }
